/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import controller.ControllerUI;
import domain.Article;
import domain.Recommendation;
import domain.Worker;
import forms.util.FormViewMode;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import tablemodels.TableModelRecomendation;

/**
 *
 * @author Veljko
 */
public class ViewAllRecommendationsForm extends javax.swing.JFrame {
    
    private List<Recommendation> recommendations;
    private Worker currentWorker;
    private List<Worker> workers;

    /**
     * Creates new form ViewAllRecommendationsForm
     */
    public ViewAllRecommendationsForm(Worker currentWorker) {
        initComponents();
        try {
            this.recommendations=ControllerUI.getInstance().getAllRecommendations();
            this.workers=ControllerUI.getInstance().getAllWorkers();
            this.currentWorker=currentWorker;
        } catch (Exception ex) {
            Logger.getLogger(ViewAllRecommendationsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        populateForm();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRecommendations = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnDetails = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        comboArticle = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        btnShowAll = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblRecommendations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblRecommendations.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRecommendationsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRecommendations);

        btnDelete.setText("Izbrisi");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnDetails.setText("Detalji");
        btnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailsActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnBack.setText("‚Üê");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setText("Artikli:");

        comboArticle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSearch.setText("Pretrazi prema artiklu");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnShowAll.setText("Prikazi sve preporuke");
        btnShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllActionPerformed(evt);
            }
        });

        btnHelp.setText("Pomoc");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(comboArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnShowAll, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnHelp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDetails)
                                .addGap(33, 33, 33)
                                .addComponent(btnDelete))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 717, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(25, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addComponent(btnShowAll)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnDetails)
                    .addComponent(btnDelete)
                    .addComponent(btnHelp))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        Article article = (Article)comboArticle.getSelectedItem();
        List<Recommendation> recommendationsSearch = new ArrayList<>();
        try {
            recommendationsSearch = ControllerUI.getInstance().getAllRecommendationsByArticle(article);
        } catch (Exception ex) {
            JOptionPane.showConfirmDialog(this, "Sistem ne moze da nadje preporuke po unetim vrednostima: " + ex.getMessage(), "Message", JOptionPane.ERROR_MESSAGE);
        }
        tblRecommendations.setModel(new TableModelRecomendation(recommendationsSearch));
        JOptionPane.showMessageDialog(this, "Sistem je nasao preporuke po unetim vrednostima");
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            int row = tblRecommendations.getSelectedRow();
            if(row==-1){
                JOptionPane.showMessageDialog(this, "Sistem ne moze da ucita preporuku: Nijedna preporuka nije izabrana", "Message", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(currentWorker.getWorkerID()!=recommendations.get(row).getWorkerID()){
                JOptionPane.showMessageDialog(this, "Niste ovlasceni da brisete ovu prepouku!");
                return;
            }
            TableModelRecomendation tmr = (TableModelRecomendation) tblRecommendations.getModel();
            tmr.deleteRecommendation(row);
            JOptionPane.showMessageDialog(this, "Sistem je obrisao preporuku");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da obrise preporuku: " + ex.getMessage(), "Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailsActionPerformed
        int row=tblRecommendations.getSelectedRow();
        if(row==-1){
            JOptionPane.showMessageDialog(this, "Nijedna preporuka nije izabrana");
            return;
        }
        TableModelRecomendation tmr = (TableModelRecomendation) tblRecommendations.getModel();
        Recommendation recommendation = tmr.getRecommendation(row);
        RecommendationForm rf = new RecommendationForm(FormViewMode.VIEW_MODE, recommendation, currentWorker);
        this.setVisible(false);
        this.dispose();
        rf.setVisible(true);
        JOptionPane.showMessageDialog(this, "Sistem je ucitao preporuku");
    }//GEN-LAST:event_btnDetailsActionPerformed

    private void btnShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllActionPerformed
        tblRecommendations.setModel(new TableModelRecomendation(recommendations));
    }//GEN-LAST:event_btnShowAllActionPerformed

    private void tblRecommendationsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRecommendationsMouseClicked
        if(tblRecommendations.getSelectedColumn()!=3){
            return;
        }
        int row = tblRecommendations.getSelectedRow();
        int column = tblRecommendations.getSelectedColumn();
        JOptionPane.showMessageDialog(this, tblRecommendations.getValueAt(row, column).toString(), tblRecommendations.getValueAt(row, 1).toString(), JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_tblRecommendationsMouseClicked

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        JOptionPane.showMessageDialog(this, "Ovo je forma za prikaz svih preporuka!\n"
                + "U tabeli su prikazane sve preporuke iz sistema. Moguce je filtrirati ih\n"
                + "po artiklima tako sto se izabere artikal iz opadajuceg menija i klikne na\n"
                + "dugme pretrazi. U tabeli ce se prikazati sve preporuke vezane za izabran\n"
                + "artikal. Ukoliko izaberemo neku preporuku i kliknemo na dugme detalji\n"
                + "otvorice se forma za prikaz preporuke, a ukoliko se klikne na dugme izbrisi\n"
                + "preporuka ce se izbrisati iz sistem. Preporuku moze da izbrise samo radnik koji\n"
                + "ju je i kreirao, ostali nisu ovlasceni za to.");
    }//GEN-LAST:event_btnHelpActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDetails;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnShowAll;
    private javax.swing.JComboBox<String> comboArticle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRecommendations;
    // End of variables declaration//GEN-END:variables

    private void populateForm() {
        TableModelRecomendation tmr = new TableModelRecomendation(recommendations);
        tblRecommendations.setModel(tmr);
        for(Worker worker:workers){
            for (int i = 0; i < tblRecommendations.getRowCount(); i++) {
                if(worker.getWorkerID()==tmr.getRecommendation(i).getWorkerID() && worker.isDeleted()){
                    tblRecommendations.getComponentAt(1, i).setForeground(Color.red);
                }
            }
        }
        try {
            comboArticle.setModel(new JComboBox(new DefaultComboBoxModel(ControllerUI.getInstance().getAllArticles().toArray())).getModel());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da ucita listu artikala: "+ex.getMessage(), "Messsage", JOptionPane.ERROR_MESSAGE);
        }
        
    }
}
