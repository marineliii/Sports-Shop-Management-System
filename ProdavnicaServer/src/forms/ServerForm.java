/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import controller.Controller;
import domain.Worker;
import forms.util.FormViewMode;
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import threads.ServerThread;

/**
 *
 * @author Veljko
 */
public class ServerForm extends javax.swing.JFrame {
    
    private ServerThread st;

    /**
     * Creates new form ServerForm
     */
    public ServerForm() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        lblStatus.setText("Server nije pokrenut!");
        lblStatus.setForeground(Color.red);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnStartServer = new javax.swing.JButton();
        btnStopServer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itemAddWorker = new javax.swing.JMenuItem();
        itemShowWorkers = new javax.swing.JMenuItem();
        itemDeletedWorkers = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        itemText = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        itemAboutApp = new javax.swing.JMenuItem();
        itemAboutCreator = new javax.swing.JMenuItem();
        meniHelp = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Serverska forma");

        btnStartServer.setText("Pokretanje server");
        btnStartServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartServerActionPerformed(evt);
            }
        });

        btnStopServer.setText("Zaustavljanje server");
        btnStopServer.setEnabled(false);
        btnStopServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopServerActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/Server (1).jpg"))); // NOI18N

        lblStatus.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblStatus.setText("jLabel2");

        jMenu1.setText("Radnici");

        itemAddWorker.setText("Dodaj radnika");
        itemAddWorker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAddWorkerActionPerformed(evt);
            }
        });
        jMenu1.add(itemAddWorker);

        itemShowWorkers.setText("Prikazi sve aktivne radnike");
        itemShowWorkers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemShowWorkersActionPerformed(evt);
            }
        });
        jMenu1.add(itemShowWorkers);

        itemDeletedWorkers.setText("Prikazi obrisane radnike");
        itemDeletedWorkers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemDeletedWorkersActionPerformed(evt);
            }
        });
        jMenu1.add(itemDeletedWorkers);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Server");

        itemText.setText("Podesavanja");
        itemText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTextActionPerformed(evt);
            }
        });
        jMenu3.add(itemText);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Info");

        itemAboutApp.setText("O aplikaciji");
        itemAboutApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAboutAppActionPerformed(evt);
            }
        });
        jMenu2.add(itemAboutApp);

        itemAboutCreator.setText("O kreatoru");
        itemAboutCreator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAboutCreatorActionPerformed(evt);
            }
        });
        jMenu2.add(itemAboutCreator);

        meniHelp.setText("Pomoc");
        meniHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniHelpActionPerformed(evt);
            }
        });
        jMenu2.add(meniHelp);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(btnStartServer, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnStopServer, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, Short.MAX_VALUE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStartServer, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStopServer, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStatus))
                .addGap(48, 48, 48))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemAboutCreatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAboutCreatorActionPerformed
        JOptionPane.showMessageDialog(this, "Veljko Marinkovic\n 2020/0243 \n Fakultet organizacionih nauka, Univerzitet u Beogradu");
    }//GEN-LAST:event_itemAboutCreatorActionPerformed

    private void itemAddWorkerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAddWorkerActionPerformed
        new WorkerForm(FormViewMode.ADD_MODE).setVisible(true);
    }//GEN-LAST:event_itemAddWorkerActionPerformed

    private void itemTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTextActionPerformed
        new FormSettings().setVisible(true);
    }//GEN-LAST:event_itemTextActionPerformed

    private void itemAboutAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAboutAppActionPerformed
        JOptionPane.showMessageDialog(this, "Ova aplikacija je kreirana 22.1.2024. i predstavlja klijent-server aplikaciju\n"
                + " napisanu u Java programskom jeziku. Opšta namena apliakcije jeste upravljanje prodaje jedne prodavnice\n "
                + "sportske opreme i olakšano vođenje evidencije o transakcijama sa kupcima.");
    }//GEN-LAST:event_itemAboutAppActionPerformed

    private void itemShowWorkersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemShowWorkersActionPerformed
        
        try {
            List<Worker> workers = Controller.getInstance().getAllWorkers();
            List<Worker> activWorkers = new ArrayList<>();
            for (Worker worker : workers) {
                if(!worker.isDeleted()){
                   activWorkers.add(worker);
                }
            }
            new ViewAllWorkersForm(activWorkers).setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da ucita radnike: "+ex.getMessage(),"Message", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_itemShowWorkersActionPerformed

    private void btnStartServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartServerActionPerformed
        if(st==null || !st.isAlive()){
            try {
                st=new ServerThread();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Server je vec pokrenut!", "Message", JOptionPane.ERROR_MESSAGE);
            }
        }
        st.start();
        btnStopServer.setEnabled(true);
        btnStartServer.setEnabled(false);
        lblStatus.setText("Server je pokrenut!");
        lblStatus.setForeground(Color.green);
    }//GEN-LAST:event_btnStartServerActionPerformed

    private void btnStopServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopServerActionPerformed
        if(st!=null && st.getServerSocket().isBound()){
            st.closeServer();
            btnStopServer.setEnabled(false);
            btnStartServer.setEnabled(true);
            lblStatus.setText("Server nije pokrenut!");
            lblStatus.setForeground(Color.red);
        }
        
    }//GEN-LAST:event_btnStopServerActionPerformed

    private void meniHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meniHelpActionPerformed
        JOptionPane.showMessageDialog(this, "Ovo je forma za serversku stranu!\n"
                + "Ukoliko zelite da ukljucite server pritisnite na dugme pokretanje server.\n"
                + "Ukoliko zelite da ga iskljucite pritisnite na dugme zausatvljanje servera.\n"
                + "U meniju ukoliko izaberete opciju radnik mozete da dodate novog ili prikazete sve radnike.\n"
                + "U meniju ukoliko zelite da vidite koji su trenutno radnici aktivni izaberite opciju akrivni radnici.\n"
                + "Opcija server vas salje na formu u kojoj mozete da konfigurisete podesavanja za bazu podataka.\n"
                + "Za vise informacija o aplikaciji i kreatoru kliknite na info dugme.");
    }//GEN-LAST:event_meniHelpActionPerformed

    private void itemDeletedWorkersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemDeletedWorkersActionPerformed
        try {
            List<Worker> workers = Controller.getInstance().getAllWorkers();
            List<Worker> activWorkers = new ArrayList<>();
            for (Worker worker : workers) {
                if(worker.isDeleted()){
                   activWorkers.add(worker);
                }
            }
            new ViewAllWorkersForm(activWorkers).setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da ucita radnike: "+ex.getMessage(),"Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_itemDeletedWorkersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStartServer;
    private javax.swing.JButton btnStopServer;
    private javax.swing.JMenuItem itemAboutApp;
    private javax.swing.JMenuItem itemAboutCreator;
    private javax.swing.JMenuItem itemAddWorker;
    private javax.swing.JMenuItem itemDeletedWorkers;
    private javax.swing.JMenuItem itemShowWorkers;
    private javax.swing.JMenuItem itemText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JMenuItem meniHelp;
    // End of variables declaration//GEN-END:variables
}
