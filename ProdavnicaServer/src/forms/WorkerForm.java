/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import controller.Controller;
import domain.Worker;
import forms.util.FormViewMode;
import forms.validator.Validator;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Veljko
 */
public class WorkerForm extends javax.swing.JFrame {

    private Worker chosenWorker;
    private String error;
    
    /**
     * Creates new form WorkerForm
     */
    public WorkerForm(int formMode) {
        initComponents();
        prepareView(formMode);
        error="";
    }
    
    public WorkerForm(int formMode, Worker worker) {
        chosenWorker=worker;
        initComponents();
        prepareView(formMode);
        setWorker();
        if(chosenWorker.isDeleted()){
            btnChange.setEnabled(false);
            btnDelete.setEnabled(false);
            btnSave.setEnabled(false);
            btnUpdate.setEnabled(false);
            txtEmail.setForeground(Color.red);
            txtFirstname.setForeground(Color.red);
            txtLastname.setForeground(Color.red);
            txtPassword.setForeground(Color.red);
            txtPhoneNumber.setForeground(Color.red);
            txtUsername.setForeground(Color.red);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtFirstname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtLastname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnChange = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Radnik");

        jLabel1.setText("Ime:");

        jLabel2.setText("Prezime:");

        jLabel3.setText("Email:");

        jLabel4.setText("Broj telefona:");

        jLabel5.setText("Korisnicko ime:");

        jLabel6.setText("Lozinka:");

        btnSave.setText("Sacuvaj");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Izbrisi");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnBack.setText("‚Üê");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnChange.setText("Izmeni");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        btnUpdate.setText("Azuriraj");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnHelp.setText("Pomoc");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete)
                    .addComponent(btnSave))
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHelp)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(138, 138, 138))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txtFirstname, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                            .addComponent(txtPhoneNumber)
                            .addComponent(txtEmail)
                            .addComponent(txtLastname, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnChange)
                            .addComponent(btnUpdate))
                        .addGap(58, 58, 58))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDelete)
                        .addComponent(btnUpdate)))
                .addGap(18, 18, 18)
                .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnChange))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnHelp))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        error="";
        if(!checkFields()){
            JOptionPane.showMessageDialog(this, error, "Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Worker worker = new Worker();
        worker.setFirstname(txtFirstname.getText());
        worker.setLastname(txtLastname.getText());
        worker.setEmail(txtEmail.getText());
        worker.setPhoneNumber(txtPhoneNumber.getText());
        worker.setUsername(txtUsername.getText());
        worker.setPassword(txtPassword.getText());
        try {
            Controller.getInstance().saveWorker(worker);
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio radnika");
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti radnika: "+ex.getMessage(), "Message", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            Worker worker=chosenWorker;
            Controller.getInstance().deleteWorker(worker);
            JOptionPane.showMessageDialog(this, "Sistem je obrisao radnika");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da orbise radnika: "+ex.getMessage(), "Message", JOptionPane.ERROR_MESSAGE);
        }
        this.dispose();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        error="";
        if(!checkFields()){
            JOptionPane.showMessageDialog(this, error, "Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Worker worker = chosenWorker;
        worker.setFirstname(txtFirstname.getText());
        worker.setLastname(txtLastname.getText());
        worker.setEmail(txtEmail.getText());
        worker.setPhoneNumber(txtPhoneNumber.getText());
        worker.setUsername(txtUsername.getText());
        worker.setPassword(txtPassword.getText());
        try {
            Controller.getInstance().updateWorker(worker);
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio radnika");
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti radnika", "Message", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        prepareView(FormViewMode.EDIT_MODE);
    }//GEN-LAST:event_btnChangeActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        JOptionPane.showMessageDialog(this, "Ovo je forma za prikaz, izmenu i dodavanje radnika!\n"
                + "Ukoliko je izabran mod za dodavanje radnika sva polja su prazna i potrebno ih je sve popuniti kako bi se\n"
                + "validirali i ukoliko je sve u redu radnik ce biti dodat u sistem. Nijedno polje ne sme da bude prazno, a pored\n"
                + "toga email mora biti u formatu x@x.x, broj telefona sme da sadrzi samo numericke vrednosti, korisnicko ime ne sme\n"
                + "biti krace od 2, a lozinka od 5 karaktera. Kada se sva polja popune, izborom dugmeta sacuvaj radnik se cuva u sistem.\n"
                + "Ukoliko je izabran mod za prikaz radnika, sve njegove vrednosti ce biti prikazane na odgovarajucim poljima.\n"
                + "Klikom na dugme izmeni se omogucava izmena tih podataka, pri cemu vaze gore navedena pravila. Nakon izmene se na dugme\n"
                + "azuriraj podaci sa konkretnog radnika azuriraju. Klikom na dugme obrisi radnik se brise iz sistema.");
    }//GEN-LAST:event_btnHelpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WorkerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WorkerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WorkerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WorkerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WorkerForm(FormViewMode.ADD_MODE).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstname;
    private javax.swing.JTextField txtLastname;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private boolean checkFields() {
        boolean signal=true;
        if(Validator.getInstance().isEmpty(txtFirstname.getText())
                || Validator.getInstance().isEmpty(txtLastname.getText())
                || Validator.getInstance().isEmpty(txtEmail.getText())
                || Validator.getInstance().isEmpty(txtPhoneNumber.getText())
                || Validator.getInstance().isEmpty(txtUsername.getText())
                || Validator.getInstance().isEmpty(txtPassword.getText())){
            error+="Nisu popunjena sva polja\n";
            signal = false;
        }
        
        if(Validator.getInstance().isValidEmail(txtEmail.getText())){
            error+="Email nije u dobrom formatu\n";
            signal = false;
        }
        
        if(Validator.getInstance().isDouble(txtPhoneNumber.getText())){
            error+="Nije uneta numericka vrednost za telefon\n";
            signal = false;
        }
        
        if (!Validator.getInstance().isEmpty(txtUsername.getText()) && Validator.getInstance().isGreaterThanThreshold(txtUsername.getText().length(), 2)) {
            error+="Korisnicko ime mora imati minimum dva karaktera\n";
            signal = false;
        }
        
        if (!Validator.getInstance().isEmpty(txtPassword.getText()) && Validator.getInstance().isGreaterThanThreshold(txtPassword.getText().length(), 5)) {
            error+="Loznika mora da ima minimum pet karaktera\n";
            signal = false;
        }
        
        return signal;
    }

    private void prepareView(int formMode) {
        switch (formMode) {
            case FormViewMode.ADD_MODE:
                btnDelete.setEnabled(false);
                btnSave.setEnabled(true);
                btnChange.setEnabled(false);
                btnUpdate.setEnabled(false);
                txtFirstname.setEditable(true);
                txtLastname.setEditable(true);
                txtEmail.setEditable(true);
                txtPhoneNumber.setEditable(true);
                txtUsername.setEditable(true);
                txtPassword.setEditable(true);
                break;
            case FormViewMode.VIEW_MODE:
                btnDelete.setEnabled(true);
                btnSave.setEnabled(false);
                btnChange.setEnabled(true);
                btnUpdate.setEnabled(false);
                txtFirstname.setEditable(false);
                txtLastname.setEditable(false);
                txtEmail.setEditable(false);
                txtPhoneNumber.setEditable(false);
                txtUsername.setEditable(false);
                txtPassword.setEditable(false);
                break;
            case FormViewMode.EDIT_MODE:
                btnChange.setEnabled(false);
                btnSave.setEnabled(false);
                btnUpdate.setEnabled(true);
                btnDelete.setEnabled(false);
                txtFirstname.setEditable(true);
                txtLastname.setEditable(true);
                txtEmail.setEditable(true);
                txtPhoneNumber.setEditable(true);
                txtUsername.setEditable(true);
                txtPassword.setEditable(true);
                break;
            default:
                throw new AssertionError();
        }
    }

    private void setWorker() {
        txtFirstname.setText(chosenWorker.getFirstname());
        txtLastname.setText(chosenWorker.getLastname());
        txtEmail.setText(chosenWorker.getEmail());
        txtPhoneNumber.setText(chosenWorker.getPhoneNumber());
        txtUsername.setText(chosenWorker.getUsername());
        txtPassword.setText(chosenWorker.getPassword());
    }
}
